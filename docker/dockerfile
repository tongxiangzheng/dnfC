
ARG SYSTEM_NAME='centos'
ARG VERSION="8"

FROM ${SYSTEM_NAME}:${VERSION} AS compiler
WORKDIR /pyprepare

ARG SYSTEM_NAME
ARG VERSION
RUN if [ "$SYSTEM_NAME" = "centos" ] && [ "$VERSION"="8" ]; then \
  sed -i -e "s|mirrorlist=|#mirrorlist=|g" /etc/yum.repos.d/CentOS-*; \
  fi
RUN if [ "$SYSTEM_NAME" = "centos" ] && [ "$VERSION"="8" ]; then \
  sed -i -e "s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g" /etc/yum.repos.d/CentOS-*; \
  fi 
RUN dnf clean all
RUN dnf makecache
RUN dnf install -y gcc openssl-devel bzip2-devel libffi-devel zlib-devel make wget cmake

RUN curl https://www.python.org/ftp/python/3.10.14/Python-3.10.14.tgz --output Python-3.10.14.tgz
RUN tar xzf Python-3.10.14.tgz
WORKDIR /pyprepare/Python-3.10.14
RUN ./configure --enable-shared
RUN make install -j `nproc`
RUN ln -s /usr/local/lib/libpython3.10.so.1.0 /usr/lib64/libpython3.10.so.1.0
RUN pip3 install --upgrade pip


WORKDIR /app
COPY requirements.txt ./
RUN pip3 install --no-cache-dir -r requirements.txt


COPY src /app/
RUN pyinstaller -F dnfc
#ENTRYPOINT [ "/app/dist/dnfc" ]


ARG SYSTEM_NAME
ARG VERSION
FROM ${SYSTEM_NAME}:${VERSION} AS packager

WORKDIR /root/rpmbuild

ARG SYSTEM_NAME
ARG VERSION
RUN if [ "$SYSTEM_NAME" = "centos" ] && [ "$VERSION"="8" ]; then \
  sed -i -e "s|mirrorlist=|#mirrorlist=|g" /etc/yum.repos.d/CentOS-*; \
  fi
RUN if [ "$SYSTEM_NAME" = "centos" ] && [ "$VERSION"="8" ]; then \
  sed -i -e "s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g" /etc/yum.repos.d/CentOS-*; \
  fi 
RUN dnf clean all
RUN dnf makecache
RUN dnf install -y rpmdevtools
RUN rpmdev-setuptree 

COPY /SPECS/dnfC.spec /root/rpmbuild/SPECS/dnfC.spec
COPY etc /root/dnfC-1.0/etc
COPY src /root/dnfC-1.0/src
COPY --from=compiler /app/dist/dnfc /root/dnfC-1.0/dist/

WORKDIR /root
RUN tar czvf ~/rpmbuild/SOURCES/dnfC-1.0.tar.gz dnfC-1.0

WORKDIR /root/rpmbuild
RUN rpmbuild -ba ~/rpmbuild/SPECS/dnfC.spec

ENTRYPOINT [ "/root/rpmbuild/RPMS/" ]

FROM scratch AS rpm_package
COPY --from=packager /root/rpmbuild/RPMS /

FROM scratch AS binary
COPY --from=compiler /app/dist/dnfc /
